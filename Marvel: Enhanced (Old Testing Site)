local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Marvel: Enhanced (Old Testing Site) Made By ɹɐʇsɓuᴉuɹoW ɐuᴉɹqɐS", "BloodTheme")

-- Characters
local Tab = Window:NewTab("Character")
local Section = Tab:NewSection("Chaacters")

Section:NewButton("AOE Wanda", "", function()
-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Scarlet Witch",
    [2] = "Age of Ultron"
}

game:GetService("ReplicatedStorage").network.CharacterRequest:InvokeServer(unpack(args))
end)


Section:NewButton("Infinity War Wanda", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394
    
    local args = {
        [1] = "Scarlet Witch",
        [2] = "Infinity War"
    }
    
    game:GetService("ReplicatedStorage").network.CharacterRequest:InvokeServer(unpack(args))
    end)

Section:NewButton("Invisible Woman", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Invisible Woman",
    [2] = "Fantastic 4"
}

game:GetService("ReplicatedStorage").network.CharacterRequest:InvokeServer(unpack(args))
end)

Section:NewButton("Mystique", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Mystique",
    [2] = "Days of Future Past"
}

game:GetService("ReplicatedStorage").network.CharacterRequest:InvokeServer(unpack(args))
end)

Section:NewButton("Iceman", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Iceman",
    [2] = "All New"
}

game:GetService("ReplicatedStorage").network.CharacterRequest:InvokeServer(unpack(args))
end)

Section:NewButton("Jean Grey", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Jean Grey",
    [2] = "Apocalypse"
}

game:GetService("ReplicatedStorage").network.CharacterRequest:InvokeServer(unpack(args))
end)

Section:NewButton("Ironman", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Ironman",
    [2] = "Age of Ultron"
}

game:GetService("ReplicatedStorage").network.CharacterRequest:InvokeServer(unpack(args))
end)

Section:NewButton("Cyclops", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Cyclops",
    [2] = "Apocalypse"
}

game:GetService("ReplicatedStorage").network.CharacterRequest:InvokeServer(unpack(args))
end)

Section:NewButton("Rogue", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Rogue",
    [2] = "90's"
}

game:GetService("ReplicatedStorage").network.CharacterRequest:InvokeServer(unpack(args))
end)

local Tab = Window:NewTab("Powers")
local Section = Tab:NewSection("Keybind Powers")

Section:NewToggle("Mind Control", "Keybind (1)", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "1" then
            local player = getPlayer()
            if player then

       -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosConfusion",
    [2] = player.Character.Stats.Abilities.Ability4,
    [3] = "Activated",
    [4] = player.Character
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end
end
end)
end)

Section:NewToggle("Telekinesis", "Keybind (2)", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "2" then
            local player = getPlayer()
            if player then

      -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosTelekinesis",
    [2] = player.Character.Stats.Abilities.Ability2,
    [3] = "Activated",
    [4] = player.Character.HumanoidRootPart
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end
end
end)
end)

Section:NewToggle("Telekinesis Throw", "Keybind (3)", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "3" then
            local player = getPlayer()
            if player then

    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosTelekinesis",
    [2] = player.Character.Stats.Abilities.Ability2,
    [3] = "Clicked",
    [4] = player.Character.HumanoidRootPart,
    [5] = Vector3.new(-39.05685806274414, 3.4999213218688965, -135.15907287597656)
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end
end
end)
end)

Section:NewToggle("Beam", "Keybind (4)", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "4" then
            local player = getPlayer()
            if player then

     -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "InfinityWarChaosBeam",
    [2] = player.Character.Stats.Abilities.Ability1,
    [3] = "Activated",
    [4] = player.Character.HumanoidRootPart
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end
end
end)
end)

Section:NewToggle("Ice Blast", "Keybind (5)", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "5" then
            local player = getPlayer()
            if player then

   -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "IceBlast",
    [2] = player.Character.Stats.Abilities.Ability1,
    [3] = "Activated",
    [4] = player.Character.HumanoidRootPart
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end
end
end)
end)

Section:NewToggle("Pain Infliction", "Keybind (6)", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "6" then
            local player = getPlayer()
            if player then

   -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "PainInfliction",
    [2] = player.Character.Stats.Abilities.BasicAttack,
    [3] = "Activated",
    [4] = player.Character
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end
end
end)
end)

Section:NewToggle("UniBeam", "Keybind (7)", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "7" then
            local player = getPlayer()
            if player then

  -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Unibeam",
    [2] = player.Character.Stats.Abilities.Ultimate,
    [3] = "Activated",
    [4] = player.Character.HumanoidRootPart
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end
end
end)
end)

Section:NewToggle("Laser Beam", "Keybind (8)", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "8" then
            local player = getPlayer()
            if player then

 -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "LaserBeam",
    [2] = player.Character.Stats.Abilities.Ability1,
    [3] = "Activated",
    [4] = player.Character.HumanoidRootPart
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end
end
end)
end)

Section:NewToggle("Power Absorption", "Keybind (9)", function()

    local function getPlayer()
        local userInput = game:GetService("UserInputService")
        local cam = workspace.CurrentCamera
        local mousePos = userInput:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        players = {}
        for _, x in next, game:GetService('Players'):GetPlayers() do
            players[#players + 1] = x.Character
        end
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true
        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, x in next, game:GetService('Players'):GetPlayers() do
                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                    continue
                end
                return x
            end
        end
        return false
    end

    local function Set(list)
        local set = {}
        for _, l in ipairs(list) do
            if l then
                set[l] = true
            end
        end
        return set
    end

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
        if key == "9" then
            local player = getPlayer()
            if player then

 -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "PowerAbsorption",
    [2] = player.Character.Stats.Abilities.Ability3,
    [3] = "Activated",
    [4] = player.Character.HumanoidRootPart
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end
end
end)
end)

local Section = Tab:NewSection("Other Powers")

Section:NewButton("Wanda Ultimate", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosBlast",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ultimate,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosBlast",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ultimate,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosBlast",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ultimate,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosBlast",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ultimate,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosBlast",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ultimate,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosBlast",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ultimate,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosBlast",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ultimate,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosBlast",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ultimate,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosBlast",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ultimate,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "AgeofUltronChaosBlast",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ultimate,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Jean Shield", "", function()
   -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "TKShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "TKShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "TKShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "TKShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "TKShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "TKShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "TKShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "TKShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "TKShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "TKShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Invis Shield", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "BubbleShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "BubbleShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "BubbleShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "BubbleShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "BubbleShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "BubbleShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "BubbleShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "BubbleShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "BubbleShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
 -- Script generated by SimpleSpy - credits to exx#9394

 local args = {
    [1] = "BubbleShield",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability3,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Invisible", "", function()
   -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "Invisibility",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Ability1,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

local Section = Tab:NewSection("Flight")

Section:NewButton("Infinity War Wanda Flight", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "InfinityWarChaosFlight",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Transport,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Infinity War Wanda Flight Off", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "InfinityWarChaosFlight",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Transport,
    [3] = "Deactivated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Invis Woman Flight", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "ShieldFlight",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Transport,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Invis Woman Flight Off", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "ShieldFlight",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Transport,
    [3] = "Deactivated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Iceman Flight", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "IceFloor",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Transport,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Iceman Flight Off", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "IceFloor",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Transport,
    [3] = "Deactivated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Ironman Flights", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "IronmanFlight",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Transport,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Ironman Flight Off", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "IronmanFlight",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Transport,
    [3] = "Deactivated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Rogue Flight", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "RogueFlight",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Transport,
    [3] = "Activated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

Section:NewButton("Rogue Flight Off", "", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "RogueFlight",
    [2] = game:GetService("Players").LocalPlayer.Character.Stats.Abilities.Transport,
    [3] = "Deactivated"
}

game:GetService("ReplicatedStorage").network.AbilityTrigger:InvokeServer(unpack(args))
end)

local Tab = Window:NewTab("Others")
local Section = Tab:NewSection("Misc")

Section:NewButton("Infinite Yield", "Admin", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

Section:NewButton("Btools", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/TheMorningstarCircle/Spellman/main/Btools"))()
end)

Section:NewButton("CMD Admin", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/TheMorningstarCircle/Spellman/main/CMD"))()
end)

Section:NewButton("Dark Dex", "Dex", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/TheMorningstarCircle/Spellman/main/Dex"))()
end)

Section:NewButton("Simple Spy", "Remote Spy", function()
    loadstring(game:HttpGet("https://github.com/exxtremestuffs/SimpleSpySource/raw/master/SimpleSpy.lua"))()
end)

Section:NewButton("Hydroxide", "Remote Spy", function()
    loadstring(game:HttpGetAsync('https://raw.githubusercontent.com/TheMorningstarCircle/Spellman/main/Hydroxide', true))()
end)

Section:NewButton("In-Line Translator", "Translate", function()
    loadstring(game:HttpGetAsync('https://i.qts.life/r/ChatInlineTranslator.lua', true))()
end)

local Tab = Window:NewTab("Credits")
local Section = Tab:NewSection("Created by ɹɐʇsɓuᴉuɹoW ɐuᴉɹqɐS")

local Section = Tab:NewSection("Toggle UI")
Section:NewKeybind("Toggle UI", "Toggle UI", Enum.KeyCode.Equal, function()
	Library:ToggleUI()
end)

wait(1)
game.StarterGui:SetCore("SendNotification", { 
    Title = "★ᵀʰᵉ ᴹᵒʳⁿⁱⁿᵍˢᵗᵃʳ ᶜⁱʳᶜˡᵉ★";
    Text = "Marvel:E (OTS)      ~~~~~~ Now Active ~~~~~~";               
    Icon = "rbxthumb://type=Asset&id=10845688213&w=150&h=150";
    Duration = "60";
    Button1 = "Close";
})
